//
//  ScoreStarsKit.m
//  ScoreStarsDemo
//
//  Created by pengxianhe on 15/5/23.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "ScoreStarsKit.h"


@implementation ScoreStarsKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawStarWithFrontColor: (UIColor*)frontColor
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(30, 0)];
    [bezierPath addCurveToPoint: CGPointMake(30, 30) controlPoint1: CGPointMake(30, 0) controlPoint2: CGPointMake(30, 30)];
    [bezierPath addLineToPoint: CGPointMake(0, 30)];
    [bezierPath addLineToPoint: CGPointMake(0, 0)];
    [bezierPath addLineToPoint: CGPointMake(15, 0)];
    [bezierPath addCurveToPoint: CGPointMake(12.43, 4.4) controlPoint1: CGPointMake(15, 0) controlPoint2: CGPointMake(13.69, 2.25)];
    [bezierPath addCurveToPoint: CGPointMake(10.15, 8.33) controlPoint1: CGPointMake(11.27, 6.4) controlPoint2: CGPointMake(10.15, 8.33)];
    [bezierPath addLineToPoint: CGPointMake(0.73, 10.36)];
    [bezierPath addLineToPoint: CGPointMake(7.15, 17.55)];
    [bezierPath addLineToPoint: CGPointMake(6.18, 27.14)];
    [bezierPath addLineToPoint: CGPointMake(15, 23.25)];
    [bezierPath addLineToPoint: CGPointMake(23.82, 27.14)];
    [bezierPath addLineToPoint: CGPointMake(22.85, 17.55)];
    [bezierPath addLineToPoint: CGPointMake(29.27, 10.36)];
    [bezierPath addLineToPoint: CGPointMake(19.85, 8.33)];
    [bezierPath addLineToPoint: CGPointMake(15, 0)];
    [bezierPath addLineToPoint: CGPointMake(30, 0)];
    [bezierPath addLineToPoint: CGPointMake(30, 0)];
    [bezierPath closePath];
    [frontColor setFill];
    [bezierPath fill];
}

+ (void)drawScoreStarsCanvasWithFrame: (CGRect)frame frontColor: (UIColor*)frontColor fillColor: (UIColor*)fillColor backColor: (UIColor*)backColor value: (CGFloat)value
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    //* 150 不对
    //// Variable Declarations
    CGFloat expression = value * CGRectGetWidth(frame);


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame));


    //// backRect Drawing
    UIBezierPath* backRectPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame))];
    [backColor setFill];
    [backRectPath fill];


    //// fillRect Drawing
    UIBezierPath* fillRectPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, expression, CGRectGetHeight(frame))];
    [fillColor setFill];
    [fillRectPath fill];


    //// Group
    {
        //// Symbol Drawing
        CGRect symbolRect = CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.00000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.20000 + 0.5) - floor(CGRectGetWidth(group) * 0.00000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbolRect);
        CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);
        CGContextScaleCTM(context, symbolRect.size.width / 30, symbolRect.size.height / 30);

        [ScoreStarsKit drawStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 2 Drawing
        CGRect symbol2Rect = CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.20000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.40000 + 0.5) - floor(CGRectGetWidth(group) * 0.20000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol2Rect);
        CGContextTranslateCTM(context, symbol2Rect.origin.x, symbol2Rect.origin.y);
        CGContextScaleCTM(context, symbol2Rect.size.width / 30, symbol2Rect.size.height / 30);

        [ScoreStarsKit drawStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 3 Drawing
        CGRect symbol3Rect = CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.40000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.60000 + 0.5) - floor(CGRectGetWidth(group) * 0.40000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol3Rect);
        CGContextTranslateCTM(context, symbol3Rect.origin.x, symbol3Rect.origin.y);
        CGContextScaleCTM(context, symbol3Rect.size.width / 30, symbol3Rect.size.height / 30);

        [ScoreStarsKit drawStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 4 Drawing
        CGRect symbol4Rect = CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.60000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.80000 + 0.5) - floor(CGRectGetWidth(group) * 0.60000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol4Rect);
        CGContextTranslateCTM(context, symbol4Rect.origin.x, symbol4Rect.origin.y);
        CGContextScaleCTM(context, symbol4Rect.size.width / 30, symbol4Rect.size.height / 30);

        [ScoreStarsKit drawStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 5 Drawing
        CGRect symbol5Rect = CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.80000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 1.00000 + 0.5) - floor(CGRectGetWidth(group) * 0.80000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol5Rect);
        CGContextTranslateCTM(context, symbol5Rect.origin.x, symbol5Rect.origin.y);
        CGContextScaleCTM(context, symbol5Rect.size.width / 30, symbol5Rect.size.height / 30);

        [ScoreStarsKit drawStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);
    }
}

@end
